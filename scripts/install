#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

email=$(ynh_user_get_info --username=$admin --key=mail)

if [[ "$email" == "admin_legacy" ]]; then
    ynh_die --message="Please select a regular user as admin of the app, NOT the admin user!" --ret_code=1
fi

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --weight=1

ynh_setup_source --dest_dir="$install_dir/pytition"
mkdir -p "$install_dir/static"
mkdir -p "$install_dir/mediaroot"

chown -R "$app:www-data" "$install_dir"
setfacl -dR -m g:"www-data":rX -m u:$app:rwX "$install_dir/mediaroot/"
setfacl -R -m g:"www-data":rX -m u:$app:rwX "$install_dir/mediaroot/"

#=================================================
# SYSTEM CONFIGURATION
#=================================================
ynh_script_progression --message="Adding system configurations related to $app..." --weight=1

ynh_add_nginx_config

ynh_add_systemd_config
yunohost service add $app --description="Pytition uWSGI app $app" --log="/var/log/$app/$app.log"

# Create log files before logrotate
mkdir -p "/var/log/$app"
chmod 750 "/var/log/$app"
chown -R "$app:www-data" "/var/log/$app"

# Use logrotate to manage application logfile(s)
ynh_use_logrotate

#=================================================
# INSTALL PYTHON DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing python dependencies..." --weight=4

# Setup virtualenv and install dependencies
virtualenv --python=python3 --system-site-packages "${install_dir}/venv"
(
    set +o nounset
    source "${install_dir}/venv/bin/activate"
    set -o nounset

    python3 -m pip install --upgrade pip
    python3 -m pip install -r "$install_dir/pytition/requirements.txt"
)

#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression --message="Adding a configuration file..." --weight=1

secret_key=$(generate_secret_key)

config_path="$install_dir/pytition/pytition/pytition/settings/config.py"
ynh_add_config --template="../conf/config.py" --destination="$config_path"
chmod 400 "$config_path"
chown "$app:$app" "$config_path"

ynh_add_config --template="../conf/uwsgi.yaml" --destination="$install_dir/uwsgi.yaml"
chmod 400 "$install_dir/uwsgi.yaml"
chown "$app:$app" "$install_dir/uwsgi.yaml"

#=================================================
# RUN APP CONFIGURATION
#=================================================
ynh_script_progression --message="Running app configuration..." --weight=3

ynh_exec_as "$app" bash -c "
    set +o nounset
    source '$install_dir/venv/bin/activate'
    set -o nounset
    cd '$install_dir/pytition/pytition'
    export DJANGO_SETTINGS_MODULE=pytition.settings.config
    python3 manage.py migrate
    python3 manage.py collectstatic
    python3 manage.py compilemessages
    DJANGO_SUPERUSER_PASSWORD='$password' python3 manage.py createsuperuser --noinput --username $admin --email $email
"

chmod 750 "$install_dir/static"
chown -R "$app:www-data" "$install_dir/static"


#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --weight=1

ynh_systemd_action --service_name="$app" --action="start" --log_path="/var/log/$app/$app.log"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last
